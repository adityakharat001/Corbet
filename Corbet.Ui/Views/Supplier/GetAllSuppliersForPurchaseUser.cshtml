@model IEnumerable<Corbet.Ui.Models.SupplierViewModel>

@{
    ViewData["Title"] = "GetAllSuppliersForPurchaseUser";
    int counter = 0;
}

<h1>GetAllSuppliersForPurchaseUser</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table" id="myTable">
    <thead>
        <tr>
            <th>
                Sr. No
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SupplierName)
            </th>
            <th data-orderable="false">
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th data-orderable="false">
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th data-orderable="false">
                @Html.DisplayNameFor(model => model.BillingAddress)
            </th>
            <th data-orderable="false">
                @Html.DisplayNameFor(model => model.SupplierType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreditLimit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreditPeriod)
            </th>
            <th data-orderable="false">
                @Html.DisplayNameFor(model => model.DocumentPath)
            </th>
            <th data-orderable="false">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        counter++;
                    }
                    @counter
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SupplierName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BillingAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SupplierType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreditLimit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreditPeriod)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentPath)
                </td>
                <td>
                    <a class="btn btn-sm btn-primary" asp-controller="Supplier" asp-action="UpdateSupplierForPurchaseUser" asp-route-id="@item.SupplierId"><i class="ri-edit-box-fill "></i></a>
                    <button class="btn btn-sm btn-danger" onclick="DeleteAlert('@item.SupplierId')" ><i class="ri-delete-bin-6-fill "></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>


<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>
    $(document).ready(function() {
        $('#myTable').DataTable({

        });
    });

function DeleteAlert(id)
 {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            window.location.assign(`/Supplier/DeleteSupplier/${id}`);
        }
    })
}
</script>