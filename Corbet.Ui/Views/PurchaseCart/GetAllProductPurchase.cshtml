@model IEnumerable<Corbet.Ui.Models.ProductSupplierStock>




@if (TempData["AlertMessage"] != null)
{


    <script>

        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 4000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        Toast.fire({
            icon: 'success',
            title: 'Success ! Order is Done'
        })
    </script>
}
<html>
<head>
    <script src="~/lib/package/dist/sweetalert2.all.min.js"></script>
    <script src="~/lib/package/dist/sweetalert2.all.js"></script>
    <script src="~/lib/package/dist/sweetalert2.min.js"></script>
</head>
<style>
    body {
        margin: 0;
        font-family: Roboto,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
        font-size: .8125rem;
        font-weight: 400;
        line-height: 1.5385;
        color: #333;
        text-align: left;
        background-color: #add8e6;
    }

    .mt-50 {
        margin-top: 50px;
    }

    .mb-50 {
        margin-bottom: 50px;
    }



    .card {
        position: relative;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid rgba(0,0,0,.125);
        border-radius: .1875rem;
    }

    .card-img-actions {
        position: relative;
    }

    .card-body {
        -ms-flex: 1 1 auto;
        flex: 1 1 auto;
        padding: 1.25rem;
        text-align: center;
    }

    .card-img {
        width: 350px;
    }

    .star {
        color: red;
    }

    .bg-cart {
        background-color: orange;
        color: #fff;
    }

        .bg-cart:hover {
            color: #fff;
        }

    .bg-buy {
        background-color: green;
        color: #fff;
        padding-right: 29px;
    }

        .bg-buy:hover {
            color: #fff;
        }

    a {
        text-decoration: none !important;
    }
</style>
<body>
    <!--Layout-->
        
<aside id="sidebar" class="sidebar">
    <ul class="sidebar-nav" id="sidebar-nav">
        <li class="nav-item">
            <a class="nav-link collapsed" asp-controller="PurchaseUser" asp-action="Index">
                <i class="bi bi-grid"></i>
                <span>Dashboard</span>
            </a>
        </li>
        <!-- End Dashboard Nav -->


        <li class="nav-item">
            <a class="nav-link collapsed"
               asp-controller="Supplier"
               asp-action="GetAllSuppliersForPurchaseUser">
                <i class="bi bi-menu-button-wide"></i><span>Suppliers</span>
            </a>
        </li>


        <li class="nav-item">
            <a class="nav-link collapsed"
               asp-controller="PurchaseCart"
               asp-action="PurchaseGetAllCart">
                <i class="bi bi-menu-button-wide"></i><span>Cart</span>
            </a>
        </li>

        <li class="nav-item">
            <a class="nav-link"
               asp-controller="PurchaseCart"
               asp-action="GetAllProductPurchase">
                <i class="bi bi-menu-button-wide"></i><span>Products</span>
            </a>
        </li>

        <li class="nav-item">
            <a class="nav-link collapsed"
               asp-controller="PurchaseCart"
               asp-action="PurchaseAllOrder">
                <i class="bi bi-menu-button-wide"></i><span>Order Status</span>
            </a>
        </li>

    </ul>
</aside>
<!-- End Sidebar -->
    <div class="pagetitle">
        <h1>Products</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-action="GetAllProducts">Products</a></li>
                <li class="breadcrumb-item active">New Product</li>
            </ol>
        </nav>
        <!--Layput Done-->
        <!-- title -->

        <div class="container d-flex justify-content-center mt-50 mb-50">

            <div class="row">
                @foreach (var item in Model)
                {
                    <div class="col-md-4 mt-2">


                        <div class="card">
                            <div class="card-body">
                                <div class="card-img-actions">

                                    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTxrD7NOJQJYfrT1RSlwjfRbrCZOJdZBbh6ew&usqp=CAU" @*src="~/Images/ProductImages/@item.ImagePath"*@ class="card-img img-fluid" width="96" height="350" alt="">


                                </div>
                            </div>

                            <div class="card-body bg-light text-center">
                                <div class="mb-2">
                                    <h6 class="font-weight-semibold mb-2">
                                        <a href="#" class="text-default mb-2" data-abc="true"> @Html.DisplayFor(modelItem => item.ProductName)</a>
                                    </h6>

                                </div>

                                <h3 class="mb-0 font-weight-semibold">@Html.DisplayFor(modelItem => item.Price)</h3>

                                <div>
                                    <i class="fa fa-star star"></i>
                                    <i class="fa fa-star star"></i>
                                    <i class="fa fa-star star"></i>
                                    <i class="fa fa-star star"></i>
                                </div>

                                <div class="text-muted mb-3"> @Html.DisplayFor(modelItem => item.Quantity)</div>
                                @*                                <button class="btn btn-sm btn-primary mt-4" itemid='@item.StockId' asp-route-id="@item.StockId" onclick="AddToCart('@item.StockId')"><i class="bag-plus-fill"></i>Add to cart</button><br />
                            *@
                                <button class="btn btn-sm btn-primary mt-4" itemid='@item.StockId' asp-route-id="@item.StockId" onclick="AddToCart('@item.StockId','@item.Price')"><i class="bag-plus-fill"></i> Add to cart</button>


                            </div>
                        </div>




                    </div>




                }


            </div>
        </div>
</body>
</html>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }



    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <script>

        $(document).ready(function() {

            console.log("445");
        });
        function AddToCart(stockId, price) {
            console.log("hello");
            console.log(stockId);
            var form = new FormData();
            form.append("stockId", stockId);
            console.log(form);
            $.ajax({
                async: true,
                type: 'POST',
                dataType: 'JSON',
                data: { stockId: stockId, price: price },
                url: '/PurchaseCart/PurchaseAddToCart',
                success: function(stockId) {
                    if (stockId == true) {


                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })

                        Toast.fire({
                            icon: 'success',
                            title: 'Item Added in cart !!!'
                        })
                    }
                    else {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })

                        Toast.fire({
                            icon: 'error',
                            title: 'Unfortunately,This product is currently out of stock and unavailable'
                        })

                        //     Toast.fire({
                        //        icon: 'error',
                        //        title: 'Unfortunately,This product is currently out of stock and unavailable'
                        //})

                    }
                },
                error: function() {


                }




            });
        }

    </script>