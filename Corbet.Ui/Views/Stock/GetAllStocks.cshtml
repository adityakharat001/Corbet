@model IEnumerable<Corbet.Ui.Models.GetAllStocksModel>

@{
    ViewData["Title"] = "GetAllStocks";
    int counter = 0;
}

<style>
    .btn-and-filters {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }
</style>

<aside id="sidebar" class="sidebar">
    <ul class="sidebar-nav" id="sidebar-nav">
        <li class="nav-item">
            <a class="nav-link collapsed" asp-controller="#" asp-action="#">
                <i class="bi bi-grid"></i>
                <span>Dashboard</span>
            </a>
        </li>
        <!-- End Dashboard Nav -->


        <li class="nav-item">
            <a class="nav-link collapsed"
               asp-controller="BackOffice"
               asp-action="GetAllOrders">
                <i class="bi bi-menu-button-wide"></i><span>Orders</span>
            </a>
        </li>
        
        <li class="nav-item">
            <a class="nav-link"
               asp-controller="Stock"
               asp-action="GetAllStocks">
                <i class="bi bi-menu-button-wide"></i><span>Stocks</span>
            </a>
        </li>

        <li class="nav-item">

            <a class="nav-link collapsed"
               asp-controller="BackOffice"
               asp-action="GetAllInvoices">
                <i class="bi bi-menu-button-wide"></i><span>Invoices</span>
            </a>
        </li>
    </ul>
</aside>
<!-- End Sidebar -->

<div class="pagetitle">
    <h1>Stocks</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">Stocks</li>
        </ol>
    </nav>
</div>

<div class="btn-and-filters">
    <div class="addStockBtnDiv">
        <a class="btn btn-primary" asp-controller="Stock" asp-action="AddStock">Add Stock</a>
    </div>
    <div class="filters">
        <label class="labelFilter">Filter By </label>
        <select class="cl_product" id="ddlProduct" title="filter by product name"></select>
        <select class="cl_quantity" id="ddlQuantity" title="filter by quantity (no. of stocks available)"></select>
        <select class="cl_type" id="ddlType" title="filter by stock type"></select>
    </div>
</div>
<hr />

<table class="table" id="myTable">
    <thead>
        <tr>
            <th>
                Sr. No
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th data-orderable="false">
                Type
            </th>
            <th data-orderable="false">
                @Html.DisplayNameFor(model => model.TimeIn)
            </th>
            <th data-orderable="false">
                @Html.DisplayNameFor(model => model.TimeOut)
            </th>
            <th data-orderable="false">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        counter++;
                    }
                    @counter
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StockTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeIn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeOut)
                </td>
                <td class="tableActions">
                    <a class="btn btn-sm btn-primary" asp-controller="Stock" asp-action="UpdateStock" asp-route-id="@item.StockId"><i class="ri-edit-box-fill "></i></a>
                    <button class="btn btn-sm btn-danger" onclick="DeleteStockWithSwal('@item.StockId')"><i class="ri-delete-bin-6-fill "></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script>
    //$("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
    //    $("#success-alert").slideUp(500);
    //});

    //MULTIPLE FILTERS
    $(document).ready(function () {
        $('#myTable').DataTable({

        });

        //ProductList -> Extract ProductName
        var productNode = $("#ddlProduct");
        productNode.append($("<option></option>").val("all").html("Select Product"));
        var url = "/Stock/GetProductList";
        $.get(url, null, function (data) {
            console.log(data);
            $.each(data, function (i, product) {
                productNode.append($("<option></option>").val(product.productName).html(product.productName));
            });
        });
        //StockTypeList -> Extract StockTypeName
        var stockTypeNode = $("#ddlType");
        stockTypeNode.append($("<option></option>").val("all").html("Select Type"));
        var url = "/Stock/GetStockTypeList";
        $.get(url, null, function (data) {
            console.log(data);

            $.each(data, function (i, type) {
                stockTypeNode.append($("<option></option>").val(type.stockTypeName).html(type.stockTypeName));
            });
        });
        //StockList's Quantity -> Putting Quantity of range(1, 100)
        var stockQuantityNode = $("#ddlQuantity");
        stockQuantityNode.append($("<option></option>").val("all").html("Select Quantity"));
        for (let q = 1; q <= 100; q++) {
            stockQuantityNode.append($("<option></option>").val(q).html(q));
        }

        //OnChange dropdown list -> apply filters
        $("#ddlProduct, #ddlQuantity, #ddlType").on("change", function () {
            var product = $('#ddlProduct').find("option:selected").val();
            var quantity = $('#ddlQuantity').find("option:selected").val();
            var type = $('#ddlType').find("option:selected").val();
            SearchData(product, quantity, type);
        });
    });

    function SearchData(product, quantity, type) {
        if (product.toUpperCase() == 'ALL' && quantity.toUpperCase() == 'ALL' && type.toUpperCase() == 'ALL') {
            $('#myTable tbody tr').show();
        }
        else {
            $('#myTable tbody tr:has(td)').each(function () {
                var rowProduct = $.trim($(this).find('td:eq(1)').text());
                var rowQuantity = $.trim($(this).find('td:eq(2)').text());
                var rowType = $.trim($(this).find('td:eq(3)').text());

                if (product.toUpperCase() != 'ALL' && quantity.toUpperCase() != 'ALL' && rowType.toUpperCase() != 'ALL') {
                    if (rowProduct.toUpperCase() == product.toUpperCase() && rowQuantity == quantity && rowType.toUpperCase() == type.toUpperCase()) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                }
                if (product.toUpperCase() != 'ALL' && type.toUpperCase() != 'ALL' && quantity.toUpperCase() == 'ALL') {
                    //console.log("1");
                    //console.log("product.toUpperCase() != 'ALL' && type.toUpperCase() != 'ALL' && quantity.toUpperCase() == 'ALL'");
                    //console.log(`[rp:${rowProduct},p:${product}], [rt:${rowType},t:${type}], [rq:${rowQuantity},q:${quantity}]`);
                    if (rowProduct.toUpperCase() == product.toUpperCase() && rowType.toUpperCase() == type.toUpperCase()) {
                        //console.log("1-true");
                        $(this).show();
                    }
                    else {
                        //console.log("1-false");
                        $(this).hide();
                    }
                    //console.log("===================================");
                }

                if (product.toUpperCase() != 'ALL' && type.toUpperCase() == 'ALL' && quantity.toUpperCase() != 'ALL') {
                    //console.log("2");
                    //console.log("product.toUpperCase() != 'ALL' && type.toUpperCase() == 'ALL' && quantity.toUpperCase() != 'ALL'");
                    //console.log(`[rp:${rowProduct},p:${product}], [rt:${rowType},t:${type}], [rq:${rowQuantity},q:${quantity}]`);
                    if (rowProduct.toUpperCase() == product.toUpperCase() && rowQuantity == quantity) {
                        //console.log("2-true");
                        $(this).show();
                    }
                    else {
                        //console.log("2-false");
                        $(this).hide();
                    }
                    //console.log("===================================");
                }

                if (product.toUpperCase() != 'ALL' && type.toUpperCase() == 'ALL' && quantity.toUpperCase() == 'ALL') {
                    //console.log("3");
                    //console.log("product.toUpperCase() != 'ALL' && type.toUpperCase() == 'ALL' && quantity.toUpperCase() == 'ALL'");
                    //console.log(`[rp:${rowProduct},p:${product}], [rt:${rowType},t:${type}], [rq:${rowQuantity},q:${quantity}]`);
                    if (rowProduct.toUpperCase() == product.toUpperCase()) {
                        //console.log("3-true");
                        $(this).show();
                    }
                    else {
                        //console.log("3-false");
                        $(this).hide();
                    }
                    //console.log("===================================");
                }

                if (product.toUpperCase() == 'ALL' && type.toUpperCase() != 'ALL' && quantity.toUpperCase() != 'ALL') {
                    console.log("4");
                    //console.log("product.toUpperCase() == 'ALL' && type.toUpperCase() != 'ALL' && quantity.toUpperCase() != 'ALL'");
                    //console.log(`[rp:${rowProduct},p:${product}], [rt:${rowType},t:${type}], [rq:${rowQuantity},q:${quantity}]`);
                    if (rowType.toUpperCase() == type.toUpperCase() && rowQuantity == quantity) {
                        //console.log("4-true");
                        $(this).show();
                    }
                    else {
                        //console.log("4-false");
                        $(this).hide();
                    }
                    //console.log("===================================");
                }

                if (product.toUpperCase() == 'ALL' && type.toUpperCase() != 'ALL' && quantity.toUpperCase() == 'ALL') {
                    //console.log("5");
                    //console.log("product.toUpperCase() == 'ALL' && type.toUpperCase() != 'ALL' && quantity.toUpperCase() == 'ALL'");
                    //console.log(`[rp:${rowProduct},p:${product}], [rt:${rowType},t:${type}], [rq:${rowQuantity},q:${quantity}]`);
                    if (rowType.toUpperCase() == type.toUpperCase()) {
                        //console.log("5-true");
                        $(this).show();
                    }
                    else {

                        //console.log("5-false");
                        $(this).hide();
                    }
                    //console.log("===================================");
                }
                if (product.toUpperCase() == 'ALL' && type.toUpperCase() == 'ALL' && quantity.toUpperCase() != 'ALL') {
                    //console.log("6");
                    //console.log("product.toUpperCase() == 'ALL' && type.toUpperCase() == 'ALL' && quantity.toUpperCase() != 'ALL'");
                    //console.log(`[rp:${rowProduct},p:${product}], [rt:${rowType},t:${type}], [rq:${rowQuantity},q:${quantity}]`);
                    if (rowQuantity == quantity) {
                        //console.log("6-true");
                        $(this).show();
                    }
                    else {
                        //console.log("6-false");
                        $(this).hide();
                    }
                    //console.log("===================================");
                }

            });
        }
    }

    function DeleteStockWithSwal(id) {
        console.log(`Stock having id=${id} will be deleted if you hit yes button.`);
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.assign(`/Stock/DeleteStock/${id}`);
            }
        });
    }
</script>