@model Corbet.Ui.Models.AddStockModel

@{
    ViewData["Title"] = "AddStock";
}

<aside id="sidebar" class="sidebar">
    <ul class="sidebar-nav" id="sidebar-nav">
        <li class="nav-item">
            <a class="nav-link collapsed" asp-controller="#" asp-action="#">
                <i class="bi bi-grid"></i>
                <span>Dashboard</span>
            </a>
        </li>
        <!-- End Dashboard Nav -->


        <li class="nav-item">
            <a class="nav-link collapsed"
               asp-controller="BackOffice"
               asp-action="GetAllOrders">
                <i class="bi bi-menu-button-wide"></i><span>Orders</span>
            </a>
        </li>
        
        <li class="nav-item">
            <a class="nav-link "
               asp-controller="Stock"
               asp-action="GetAllStocks">
                <i class="bi bi-menu-button-wide"></i><span>Stocks</span>
            </a>
        </li>

        <li class="nav-item">

            <a class="nav-link collapsed"
               asp-controller="BackOffice"
               asp-action="GetAllInvoices">
                <i class="bi bi-menu-button-wide"></i><span>Invoices</span>
            </a>
        </li>
    </ul>
</aside>
<!-- End Sidebar -->

<div class="pagetitle">
    <h1>Add Stock</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="GetAllStocks">Stocks</a></li>
            <li class="breadcrumb-item active">Add Stock</li>
        </ol>
    </nav>
</div>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddStock">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">Product Name</label>
                <select asp-for="ProductId" class="form-control form-select">
                    @*<option value="0">-Select Product-</option>
                    @foreach (var product in Model.ProductList)
                    {
                        <option value="@product.ProductId">@product.ProductTitle</option>
                    }*@
                </select>
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Enter Quantity</label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Stock Type</label>
                <select asp-for="StockTypeId" class="form-control form-select"></select>
                <span asp-validation-for="StockTypeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Time Out</label>
                <input asp-for="TimeOut" class="form-control" onchange="timeOutVaueChange(this.value)"/>
                <span asp-validation-for="TimeOut" class="text-danger timeOut"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary btnCreate" />
                <a class="btn btn-warning" asp-controller="Stock" asp-action="GetAllStocks">Back to List</a>
            </div>
        </form>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
<script>
    window.onload = function () {
        //ProductList
        var productNode = $("#ProductId");
        productNode.append($("<option></option>").val("0").html("-Select Product-"));
        var url = "/Stock/GetProductList";
        $.get(url, null, function (data) {
            console.log(data);
            $.each(data, function (i, product) {
                productNode.append($("<option></option>").val(product.id).html(product.productName));
            });
        });
        //StockTypeList
        var stockTypeIdNode = $("#StockTypeId");
        stockTypeIdNode.append($("<option></option>").val("0").html("-Select Type-"));
        var url = "/Stock/GetStockTypeList";
        $.get(url, null, function (data) {
            console.log(data);

            $.each(data, function (i, type) {
                stockTypeIdNode.append($("<option></option>").val(type.stockTypeId).html(type.stockTypeName));
            });
        });

        //console.log($("#TimeOut").val());
        //var timeOutVal = $("#TimeOut").val();
        //if (timeOutVal != "") {
        //    //console.log("hhjkjhmkj");
        //    var timeIn = new Date();
        //    var mTimeIn = moment(timeIn).format('YYYY-MM-DDTHH:mm');
        //    console.log(mTimeIn);

        //    //var timeIn_day = timeIn.getDate();
        //    //var timeIn_month = timeIn.getMonth();
        //    //var timeIn_year = timeIn.getFullYear();
        //    //var timeIn_hours = timeIn.getHours();
        //    //var timeIn_minutes = timeIn.getMinutes();
        //    //var timeIn_seconds = timeIn.getSeconds();

        //    //var minDateTimeOut = `${timeIn_year}-${timeIn_month}-${timeIn_day}T${timeIn_hours}:${timeIn_minutes}`;//2022-11-21T16:11

        //    //var minDateTimeOut = new Date(timeIn_year, timeIn_month, timeIn_day, timeIn_hours, timeIn_minutes, timeIn_seconds);
        //    console.log(timeIn);
        //    //console.log(minDateTimeOut);
        //    console.log(timeOutVal);
        //    if (mTimeIn >= timeOutVal) {
        //        $(".timeOut").html("TimeOut value should be greater than TimeIn value.");
        //        $(".btnCreate").prop('disabled', true);
        //        console.log("TimeOut value should be greater than TimeIn value.");
        //    }
        //    else {
        //        $(".timeOut").html("");
        //        $(".btnCreate").prop('disabled', false);
        //    }
        //}
    };

    function timeOutVaueChange(timeOutVal) {
        if (timeOutVal != "")
        {
            var timeIn = new Date();
            var mTimeIn = moment(timeIn).format('YYYY-MM-DDTHH:mm');
            console.log(mTimeIn);

            //var timeIn_day = timeIn.getDate();
            //var timeIn_month = timeIn.getMonth();
            //var timeIn_year = timeIn.getFullYear();
            //var timeIn_hours = timeIn.getHours();
            //var timeIn_minutes = timeIn.getMinutes();
            //var timeIn_seconds = timeIn.getSeconds();

            //var minDateTimeOut = `${timeIn_year}-${timeIn_month}-${timeIn_day}T${timeIn_hours}:${timeIn_minutes}`;//2022-11-21T16:11

            //var minDateTimeOut = new Date(timeIn_year, timeIn_month, timeIn_day, timeIn_hours, timeIn_minutes, timeIn_seconds);
            console.log(timeIn);
            //console.log(minDateTimeOut);
            console.log(timeOutVal);
            if (mTimeIn >= timeOutVal) {
                $(".timeOut").html("TimeOut value should be greater than TimeIn value.");
                $(".btnCreate").prop('disabled', true);
                console.log("TimeOut value should be greater than TimeIn value.");
            }
            else {
                $(".timeOut").html("");
                $(".btnCreate").prop('disabled', false);
            }
        }
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}